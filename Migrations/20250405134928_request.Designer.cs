// <auto-generated />
using System;
using DRES.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DRES.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250405134928_request")]
    partial class request
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DRES.Models.Material", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("material_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("material_name")
                        .IsUnique();

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("DRES.Models.Material_Request", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("approval_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("approved_by")
                        .HasColumnType("int");

                    b.Property<bool>("forwarded_to_ho")
                        .HasColumnType("bit");

                    b.Property<string>("remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("request_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("requested_by")
                        .HasColumnType("int");

                    b.Property<int>("site_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("site_id");

                    b.ToTable("Material_Requests");
                });

            modelBuilder.Entity("DRES.Models.Material_Request_Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("issued_quantity")
                        .HasColumnType("int");

                    b.Property<int>("material_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("material_id");

                    b.HasIndex("request_id");

                    b.HasIndex("unit_id");

                    b.ToTable("Material_Request_Item");
                });

            modelBuilder.Entity("DRES.Models.Site", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdat")
                        .HasColumnType("datetime2");

                    b.Property<int>("createdbyid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siteaddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sitename")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedat")
                        .HasColumnType("datetime2");

                    b.Property<int>("updatedbyid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("sitename")
                        .IsUnique();

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("DRES.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("material_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("site_id")
                        .HasColumnType("int");

                    b.Property<int>("unit_type_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("material_id");

                    b.HasIndex("site_id");

                    b.HasIndex("unit_type_id");

                    b.HasIndex("user_id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("DRES.Models.Supplier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gst")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("phone1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("gst")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DRES.Models.Transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdat")
                        .HasColumnType("datetime2");

                    b.Property<int>("createdby")
                        .HasColumnType("int");

                    b.Property<int?>("form_supplier_id")
                        .HasColumnType("int");

                    b.Property<int?>("from_site_id")
                        .HasColumnType("int");

                    b.Property<string>("invoice_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("received_by_user_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("recived_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("request_id")
                        .HasColumnType("int");

                    b.Property<int>("site_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("to_site_id")
                        .HasColumnType("int");

                    b.Property<int?>("to_user_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("transaction_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("transaction_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updatedat")
                        .HasColumnType("datetime2");

                    b.Property<int>("updatedby")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("form_supplier_id");

                    b.HasIndex("from_site_id");

                    b.HasIndex("to_user_id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DRES.Models.Transaction_Items", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("gst")
                        .HasColumnType("int");

                    b.Property<int>("material_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("tex_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("transaction_id")
                        .HasColumnType("int");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("unit_type_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("material_id");

                    b.HasIndex("transaction_id");

                    b.HasIndex("unit_type_id");

                    b.ToTable("Transaction_Items");
                });

            modelBuilder.Entity("DRES.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("unitname")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("unitsymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("unitname")
                        .IsUnique();

                    b.HasIndex("unitsymbol")
                        .IsUnique();

                    b.ToTable("Units");
                });

            modelBuilder.Entity("DRES.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("createdbyid")
                        .HasColumnType("int");

                    b.Property<string>("passwordhash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<int?>("siteid")
                        .HasColumnType("int");

                    b.Property<int>("updatedbyid")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("siteid");

                    b.HasIndex("username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DRES.Models.UserActivityLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createdat")
                        .HasColumnType("datetime2");

                    b.Property<string>("devicetype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ipaddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jwttoken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("UserActivityLogs");
                });

            modelBuilder.Entity("DRES.Models.Material_Request", b =>
                {
                    b.HasOne("DRES.Models.Site", "Site")
                        .WithMany("Material_Request")
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("DRES.Models.Material_Request_Item", b =>
                {
                    b.HasOne("DRES.Models.Material", "Material")
                        .WithMany("Material_Request_Item")
                        .HasForeignKey("material_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DRES.Models.Material_Request", "material_request")
                        .WithMany("Material_Request_Item")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DRES.Models.Unit", "Unit")
                        .WithMany("Material_Request_Item")
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Unit");

                    b.Navigation("material_request");
                });

            modelBuilder.Entity("DRES.Models.Stock", b =>
                {
                    b.HasOne("DRES.Models.Material", "Material")
                        .WithMany("Stocks")
                        .HasForeignKey("material_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DRES.Models.Site", "Site")
                        .WithMany("Stocks")
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DRES.Models.Unit", "Unit")
                        .WithMany("Stocks")
                        .HasForeignKey("unit_type_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DRES.Models.User", "User")
                        .WithMany("Stocks")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Site");

                    b.Navigation("Unit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DRES.Models.Transaction", b =>
                {
                    b.HasOne("DRES.Models.Supplier", "Supplier")
                        .WithMany("Transactions")
                        .HasForeignKey("form_supplier_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DRES.Models.Site", "Site")
                        .WithMany("Transactions")
                        .HasForeignKey("from_site_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DRES.Models.User", "user")
                        .WithMany("Transactions")
                        .HasForeignKey("to_user_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Site");

                    b.Navigation("Supplier");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DRES.Models.Transaction_Items", b =>
                {
                    b.HasOne("DRES.Models.Material", "Material")
                        .WithMany("Transaction_Items")
                        .HasForeignKey("material_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DRES.Models.Transaction", "Transaction")
                        .WithMany("TransactionItems")
                        .HasForeignKey("transaction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DRES.Models.Unit", "Unit")
                        .WithMany("Transaction_Items")
                        .HasForeignKey("unit_type_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Transaction");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DRES.Models.User", b =>
                {
                    b.HasOne("DRES.Models.Site", "Site")
                        .WithMany("Users")
                        .HasForeignKey("siteid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Site");
                });

            modelBuilder.Entity("DRES.Models.Material", b =>
                {
                    b.Navigation("Material_Request_Item");

                    b.Navigation("Stocks");

                    b.Navigation("Transaction_Items");
                });

            modelBuilder.Entity("DRES.Models.Material_Request", b =>
                {
                    b.Navigation("Material_Request_Item");
                });

            modelBuilder.Entity("DRES.Models.Site", b =>
                {
                    b.Navigation("Material_Request");

                    b.Navigation("Stocks");

                    b.Navigation("Transactions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DRES.Models.Supplier", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("DRES.Models.Transaction", b =>
                {
                    b.Navigation("TransactionItems");
                });

            modelBuilder.Entity("DRES.Models.Unit", b =>
                {
                    b.Navigation("Material_Request_Item");

                    b.Navigation("Stocks");

                    b.Navigation("Transaction_Items");
                });

            modelBuilder.Entity("DRES.Models.User", b =>
                {
                    b.Navigation("Stocks");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
